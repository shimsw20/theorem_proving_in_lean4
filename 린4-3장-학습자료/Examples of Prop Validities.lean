--교재에 제시된 결합자의 성질과 여러 항등식들의 예




section
  --variable (p q r : Prop)
  -- 논리곱과 논리합은 교환법칙이 성립
  --p ∧ q ↔ q ∧ p
  --p ∨ q ↔ q ∨ p
 
  -- 논리곱과 논리합은 결합법칙이 성립
  --(p ∧ q) ∧ r ↔ p ∧ (q ∧ r)
  --(p ∨ q) ∨ r ↔ p ∨ (q ∨ r)
  
  -- 논리곱과 논리합은 분배법칙이 성립
  --p ∧ (q ∨ r) ↔ (p ∧ q) ∨ (p ∧ r)
  --p ∨ (q ∧ r) ↔ (p ∨ q) ∧ (p ∨ r)
  
  --기타 성질들
  --(p → (q → r)) ↔ (p ∧ q → r)
  --((p ∨ q) → r) ↔ (p → r) ∧ (q → r)
  --¬(p ∨ q) ↔ ¬p ∧ ¬q
  --¬p ∨ ¬q → ¬(p ∧ q)
  --¬(p ∧ ¬p)
  --p ∧ ¬q → ¬(p → q)
  --¬p → (p → q)
  --(¬p ∨ q) → (p → q)
  --p ∨ False ↔ p
  --p ∧ False ↔ False
  --¬(p ↔ ¬p)
  --(p → q) → (¬q → ¬p)

  --고전 논리에 사용되는 성질들
  --(p → r ∨ s) → ((p → r) ∨ (p → s))
  --¬(p ∧ q) → ¬p ∨ ¬q
  --¬(p → q) → p ∧ ¬q
  --(p → q) → (¬p ∨ q)
  --(¬q → ¬p) → (p → q)
  --p ∨ ¬p
  --(((p → q) → p) → p)

end

--sorry 식별자는 어떠한 것의 증명, 객체, 데이터유형도 될 수 있는 마법의 키워드
--sorry를 사용해서 증명을 작성하면 린은 심각한 경고를 보냄
--sorry를 사용하는 것 대신 밑줄문자 _를 사용할수도 있음.
--_로 되어있는 부분은 암시적인 인자라고 말하는 것과 동일, 린이 자동으로 채움
--린이 밑줄문자를 채우는데 실패하면 "don't know how to synthesize placeholder,"를 메시지로 보냄
--이것은 올바른 유형의 항을 원한다는 의미임
--혹은 이 밑줄에 들어가야 할 것을 부분 목표로 사용자에게 보고해 채워넣기를 기다림


